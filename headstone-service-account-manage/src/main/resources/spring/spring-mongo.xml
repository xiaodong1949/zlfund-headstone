<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd  
    http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 获取配置资源 -->
	<context:property-placeholder location="classpath:mongo.properties" />
	<mongo:mongo id="mongo" replica-set="${account.manage.account.manage.mongo.replicaSet}">
		<!-- connections-per-host: 每个主机答应的连接数（每个主机的连接池大小），当连接池被用光时，会被阻塞住 
		     max-wait-time: 被阻塞线程从连接池获取连接的最长等待时间（ms） 
		     connect-timeout:在建立（打开）套接字连接时的超时时间（ms） 
		     socket-timeout:套接字超时时间;该值会被传递给
		     Socket.setSoTimeout(int) 
		     slave-ok:指明是否答应驱动从次要节点或者奴隶节点读取数据 -->
		<mongo:options 
			 connections-per-host="${account.manage.mongo.connectionsPerHost}" 
			 threads-allowed-to-block-for-connection-multiplier="${account.manage.mongo.threadsAllowedToBlockForConnectionMultiplier}" 
			 connect-timeout="${account.manage.mongo.connectTimeout}" 
			 max-wait-time="${account.manage.mongo.maxWaitTime}"
			 auto-connect-retry="${account.manage.mongo.autoConnectRetry}" 
			 socket-keep-alive="${account.manage.mongo.socketKeepAlive}" 
			 socket-timeout="${account.manage.mongo.socketTimeout}" 
			 slave-ok="${account.manage.mongo.slaveOk}" 
			 write-number="${account.manage.mongo.writeNumber}" 
			 write-timeout="${account.manage.mongo.riteTimeout}"
			 write-fsync="${account.manage.mongo.writeFsync}" />
	</mongo:mongo>
	<!-- mongodb的模板 (fund ) -->
	<bean id="fundMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		 <constructor-arg ref="mongo" />
         <constructor-arg name="databaseName" value="${account.manage.mongo.name.fund}" />
	</bean>
	  <!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
    <mongo:mapping-converter base-package="com.zlfund.headstone.core.mongo.collection" />
    
    <!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
    <mongo:repositories base-package="com.zlfund.headstone.core.mongo.repository"/>

    <!-- To translate any MongoExceptions thrown in @Repository annotated classes -->
    <context:annotation-config />
</beans>  